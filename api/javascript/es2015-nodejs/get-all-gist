
#! /usr/bin/env bash

BLACK='\033[0;30m'        # Black
BLUE='\033[0;34m'         # Blue
RED='\033[0;31m'

# Bold / Light
LIGHT_RED='\033[1;31m'
LIGHT_GREEN='\033[1;32m'
LIGHT_YELLOW='\033[1;33m'
LIGHT_CYAN='\033[1;36m'   # Cyan

NC='\033[0m' # No Color

===INSERT_NAMES===

function message {
  echo
  echo =======================
  echo "$1"
  echo =======================
  echo
}

function removeDir {
  if [ -d $ESLINT_DIR ]; then
      rm -rf $ESLINT_DIR
      echo "Deleted " $ESLINT_DIR
  fi
}

function getGist() {
  removeDir
  git clone $1 $ESLINT_DIR
  echo -e "NUMBER 2 = $2"
  cp -v $ESLINT_DIR/$2 .
}

function getRepo() {
  removeDir
  git clone $1 $ESLINT_DIR
}

function runCommand() {
  INSTALL_ESLINT_PACKAGES=installEslintPackages
  case $1 in
      "elfdebug") getGist $GIST_ELF_DEBUG_ENZYME ElfDebugEnzyme.js ;;
      "reactcomp") getGist $GIST_REACT_COMPONENT ReactComponent.js ;;      "setrnen") getGist $GIST_REACT_NATIVE_ENZYME_NPM  setup-enzyme-react-native-npm ;;      "setrney") getGist $GIST_REACT_NATIVE_ENZYME_YARN  setup-enzyme-react-native-yarn ;;      "elvenlogger") getGist $GIST_ELVEN_LOGGER elven-logger.js ;;      "reactcontrol") getGist $GIST_REACT_CONTROL control.js ;;      "reactclass") getGist $GIST_REACT_CLASS ElfApp.js ;;
      "elven-html") getGist $GIST_ELF_HTML elf-index.html;;
      "elven-local-storage") getGist $GIST_ELVEN_LOCAL_STORAGE elf-local-storage.js ;;
      "elven-systemd-tools") 

  esac
  # removeDir
}

while true; do
    message "Menu"
    echo -e "$LIGHT_GREEN Gists"
    echo -e "$LIGHT_GREEN  a) Install ESLintRc and Prettier in cwd (cdef)"
    echo -e "$LIGHT_GREEN  b) ElfDebugEnzyme"
    echo -e "$LIGHT_GREEN  c) .eslintrc"
    echo -e "$LIGHT_GREEN  d) .eslintignore"
    echo -e "$LIGHT_GREEN  e) prettier"
    echo -e "$LIGHT_GREEN  f) .prettierrc"
    echo -e "$LIGHT_GREEN  g) Default React Component"    
    echo -e "$LIGHT_GREEN  h) Setup React Native Enzyme Npm"
    echo -e "$LIGHT_GREEN  i) Setup React Native Enzyme Yarn"
    echo -e "$LIGHT_GREEN  j) ElvenLogger"
    echo -e "$LIGHT_GREEN  k) Elven Node systemd Tools"
    echo -e "$LIGHT_GREEN  l) Elven Create Concurrently"
    echo -e "$LIGHT_GREEN  m) React Control Component for elf-express"
    echo -e "$LIGHT_GREEN  n) Simple React Class Component"
    echo -e "$LIGHT_GREEN  o) Elf Basic HTML Starter Page"
    echo -e "$LIGHT_GREEN  p) Elf Local Storage"
    echo -e "$LIGHT_GREEN  r) Elf Firebase"
    echo -e "$LIGHT_RED  x) Exit"
    echo -e "
$NC"
    read -p "Please make a selection: " eotuyx
    case $eotuyx in
        [Aa]* ) runEsLintAndPrettier false; continue;;
        [Bb]* ) runCommand "elfdebug"; continue;;
        [Cc]* ) runCommand "eslintrc"; continue;;
        [Dd]* ) runCommand "eslintignore"; continue;;
        [Ee]* ) runCommand "prettier"; continue;;
        [Ff]* ) runCommand "prettierrc"; continue;;
        [Gg]* ) runCommand "reactcomp"; continue;;
        [Hh]* ) runCommand "setrnen"; continue;;
        [Ii]* ) runCommand "setrney"; continue;;
        [Jj]* ) runCommand "elvenlogger"; continue;;
        [Kk]* ) runCommand "elven-systemd-tools"; continue;;
        [Ll]* ) runCommand "elven-create-concur"; continue;;
        [Mm]* ) runCommand "reactcontrol"; continue;;
        [Nn]* ) runCommand "reactclass"; continue;;
        [Oo]* ) runCommand "elven-html"; continue;;
        [Pp]* ) runCommand "elven-local-storage"; continue;;
        [Rr]* ) runCommand "elven-firebase"; continue;;
        [XxQq]* ) break;;
        * )  -e "
$NC" + "Please answer with a, b, c or x.";;
    esac
done
